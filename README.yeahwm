New in 0.3.5

A bug concerning shifting tabs while numlock/capslock on has been fixed (thanks Andreas
V. Meier for reporting).
You can now bind 3 commands to keyboard shortcuts ( -term is now -cmd1, see below and
config.h).
Various minor fixes.

New in 0.3.4

Resizing is now done "pseudo solid". This means window contents are updated when the
resize operation is finished. This reduces cpu load drastic during resize operations.
The old real solid behaviour can be enabled via a command line option ( -sr 1) or
xresources (see below).
Snapping to windows is now enabled for resizing.
The command line options are now also settable via xresources.
Xresources are recognized in the form:

yeahwm*foo:value

foo can be one of the following:
foo                     value                               corrospending cmd line option

font                    font string                         -fn
foreground              named color or hextriplet           -fg
activeBackground        named color or hextriplet           -abg
background              named color or hextriplet           -bg
fixedColor              named color or hextriplet           -fc
borderWidth             number                              -bw 
solidResize             0 or 1                              -sr
windowSnap              number                              -snap
tablessWindows          class names                         -wlist
virtualDesktops         number (1-9)                        -vd
command1                defaults to xterm                   -cmd1
command2                specify what you like               -cmd2
command3                specify what you like               -cmd3

Command line options override settings done with xresources.
Various minor bugs have been fixed.

New in 0.3.3

A minor memory leak has been fixed.
Some minor bugs have been fixed.
Overall performance and stability has improved.
All user editable compile time options are now in config.h
(including keybindings).

For your reference:
     Ctrl+Alt + u,i,o,p shrinks, grows windows vertically, horizontally,
     Ctrl+Alt + h,j,k,l moves the windows as usual,
     Ctrl+Alt + n,m,comma,period places window topleft, topright, bottomleft, bottomright,
     Ctrl+Alt + t toggles titletab,
     Ctrl+Alt + s toggles shading,
     Ctrl+Alt + x maximises window,
     Ctrl+Alt + q closes window,
     Ctrl+Alt + v maximises window vertically,
     Ctrl+Alt + b maximises window horizontally,
     Ctrl+Alt + Down lowers window,
     Ctrl+Alt + Up raises window,
     Ctrl+Alt + f fixes the window (makes it sticky),
     Ctrl+Alt + num takes you to desktop "num",
     Ctrl+Alt + Return runs cmd1,
     Ctrl+Alt + Space runs cmd2,
     Ctrl+Alt + e runs cmd3,
     Ctrl+Alt + Left,Right switches virtual desktops,
     Ctrl+Alt + d shows the current time,
     Alt+Tab cycles windows,
     
     Mouse button1 moves window,
     Mouse button2 shades window,
     Mouse button3 resizes window,
     Mouse wheel raises/lowers window, over root switches desktop.

Remember:
     Holding the Alt key while using the mouse there is no need for aiming
     the thin window border,
     clicking with button1/button3 on the root window lets you select a window
     for moving, raise+lower, shade/resizing (just try it).
     Desktops can also be switched with dragging a window againt the screen edge
     (also an easy way for moving windows between desktops).
     Ctrl+Alt can be changed to Mod4(windows key) in "config.h"

Commandline options:

-display display
-wlist wclass1,wclass2,... (window class names for tabless windows)
-sr 0/1 pseudo solid or solid resizing
-fg foreground (color for the windowtitle,this has changed see -abg!)
-abg active background (color for the background of the active window)
-bg background (color for the inactive windows)
-fc fixed color (color for the fixed windows)
-fn font (font for the title, I recommend one of the excellent Artwiz fonts)
-vd num (initial virtual desktop count)
-bw num (border width)
-snap num (proximity in pixel for window snapping)
-term term (which term should be started by hitting Ctrl+Alt+Return)
-V (print version of yeahwm)

New in 0.3.2

Removed the unclutter function(it didn't work well and I didn't use it all).
Code cleanup and some minor bugs got fixed.

New in 0.3.0

The OSD has been removed.It wasn't really usefull and took alot of resources.
Windows now have a title tab, which can be repositioned holding the Shift-key and
dragging the tab (BeOS-like).
If you want a tab-less window toggle the tab with Ctrl+Alt + t or specify the
windowclass with the -wlist windowclass option.
If you click a tab near the right end the cursor will change to a pirate
symbol,releasing the button over the window will close the window.
Window snapping is now enabled by default (set to 10 px), if you don't like it 
start yeahwm with -snap 0.
The default colors have been changed and default bordderwidth is now 2, if you 
don't like it edit yeawm.h.
Closing windows is now done with Ctrl+Alt + q.
Modifier and key for window cycling can be changed now in keymap.h.
Support for multiple screens without Xinerama has been removed, if you have
a multihead setup use Xinerama.
    
New in 0.2.4

This release features a on screen display using XOSD.This means you have to
have XOSD installed (http://www.ignavus.net/software.html).
The OSD is used to display the workspace number,the window title when approbiate
(when cycling through the windows with Alt+Tab or when the pointer enters a
window) and move + resize information.
Although the current time can be displayed with hitting Ctrl+Alt +d.
Horizontal maximisation has been added (Ctrl+Alt + b).
Vertical maximisation has been changed to Ctrl+Alt +v.
Various settings regarding the OSD can be changed in "yeahwm.h".

New in 0.2.2:

The Modifier for the key bindings can be changed in keymap.h (Mod4 is windows
key on most keyboards).
A simple approach for uncluttering the desktop has been added (just hit Ctrl+
Alt + c ,it's far from perfect....).
Raising a window per keyboard is now possible ( Ctrl+Alt + Up , lowering is now
done with Ctrl+Alt + Down).


New in 0.2.1: 

Xinerama support (support for multiple screens without Xinerama should still be
working).
Resizing is now done opaque.
When in "selection mode" after clicking button1 on the root window you can also
shade a window (button2) or change  stacking order of windows  with the mouse
wheel.
Snapping to screen edges has now higher priority than snapping to windows.
Initial placement for windows which remember their last position improved.
If a maximized window gets moved or resized it forgets its unmaximized
position and size.
Some minor fixes have been made.
Changed default key bindings for placing windows to screen corners.

    
New in 0.2.0:

Yeahwm has now titlebars which can be toggled on/off by hitting Ctrl+Alt+t.
Windows can also be shaded by hitting Ctrl+Alt+s or by clicking the titlebar
with button2 (Alt+button2 in the window). 

Window classes can be specified at the commandline which have the titlebar
turned on by default (-wlist wclassname1,wclassname2,... use xprop to find out
the window class name of applications you want to be started with titlebars
on).
For example I want to have my editor (nedit) and my filemanager (rox) started
with titlebars on I start yeahwm like this 'yeahwm -wlist NEdit,ROX-Filer' .

If you specify '-title 1' on the commandline all windows will have titlebars
execpt those you specified by -wlist.

New and changed commandline options:
-display display
-wlist wclass1,wclass2,... (window class names for which the titlebar should be
                            toggled by default)
-title 0/1 (should the titlebar be toggled on by default?)
-fg foreground (color for the windowtitle,this has changed see -abg!)
-abg active background (color for the background of the active window)
-bg background (color for the inactive windows)
-fc fixed color (color for the fixed windows)
-fn font (font for the title, I recommend one of the excellent Artwiz fonts)
-vd num (initial virtual desktop count)
-bw num (border width)
-snap num (proximity in pixel for window snapping)
-term term (which term should be started by hitting Ctrl+Alt+Return)
-V (print version of yeahwm)
I use 'yeahwm -snap 10 -term mlterm -fn "*-snap-*"  -wlist NEdit,ROX-Filer'

Window snapping works now also when you move windows by the keyboard.(the
snapping mechanism needs some work to better support titlebars...).

The manpage still needs updating, it doesn't get installed now.
Removed some defines to make the code more readable.
Added -O2 to the CFLAGS. If you want't to optimize more do a 'export CFLAGS =
-march=yourcpu' before calling 'make'.

Have fun! ;-)

New in 0.1.4:
Swapped mousewheel up/down for desktop switching.
Number of virtual desktops can be specified via commandline (-vd num, defaults
now to 3 ).
Virtual desktops can be reached with Ctrl+Alt + num as usual, if "num" is
greater than the number of desktops you have specified new desktops are created
automagically ;-) .
E.g. you started yeahwm with the default 3 desktops and need one more desktop
just hit Ctrl+Alt+4, which creates a new desktop for you and takes you there ...
Manpage still not updated ...


     
New in 0.1.3:
Keyboard resizing of windows.
Changed default keybindings:
     see above ... 
If you don't like the new bindings edit "keymap.h" before compiling!
Removed some silly and unnecessary code.
The manpage hasn't been updated yet to reflect the changes (I'm lazy!).

New in 0.1.2:
Button1 click on the root window lets you select a window for moving,
Button3 click on the root window lets you select a window for resizing.

Changes added to evilwm:
Aspect hints are respected (useful when resizing mplayer or tvtime).
Different mousebindings:
     Raising/Lowering windows is done with the mouse wheel,  
     Moving windows doesn't raises them. 		    
     Resizing is done with button 3.			    
     Mouse wheel over root window changes virtual desktop.   
Dragging windows against left/right screen edges switches virtual desktops.

LCENSE and further readings see README.evilwm,
see also "man yeahwm".

Comments, suggestions:
     knorke@phrat.de
     
Kudos to:
     Ciaran Anscomb for writing evilwm,
     Decklin Foster for writing aewm,
     Stephan Litterst for giving this wm a name.
     Robert Kent for giving feedback.
	 
